import React, { useEffect, useState } from 'react'
import ReactDOM from 'react-dom/client'
import './style.css'

const moods = [
  { value: '—Å–ø–æ–∫–æ–π–Ω–æ–µ', label: '–°–ø–æ–∫–æ–π–Ω–æ–µ' },
  { value: '–≤–µ—Å—ë–ª–æ–µ', label: '–í–µ—Å—ë–ª–æ–µ' },
  { value: '—Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ', label: '–†–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ' },
  { value: '–ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–æ–µ', label: '–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–æ–µ' }
]

const tastes = [
  { value: '–æ—Å—Ç—Ä–æ–µ', label: '–û—Å—Ç—Ä–æ–µ' },
  { value: '–Ω–µ–∂–Ω–æ–µ', label: '–ù–µ–∂–Ω–æ–µ' },
  { value: '–≤–µ–≥–∞–Ω—Å–∫–æ–µ', label: '–í–µ–≥–∞–Ω—Å–∫–æ–µ' },
  { value: '–º—è—Å–Ω–æ–µ', label: '–ú—è—Å–Ω–æ–µ' },
  { value: '—Å–ª–∞–¥–∫–æ–µ', label: '–°–ª–∞–¥–∫–æ–µ' }
]

const App = () => {
  const [mood, setMood] = useState('')
  const [taste, setTaste] = useState('')
  const [error, setError] = useState('')

  useEffect(() => {
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.ready()
      window.Telegram.WebApp.expand()
    }
  }, [])

  const handleSubmit = () => {
    if (!window.Telegram || !window.Telegram.WebApp) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π –º–∏–Ω–∏–∞–ø–ø —á–µ—Ä–µ–∑ Telegram")
      return
    }

    if (!mood || !taste) {
      setError('–í—ã–±–µ—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –≤–∫—É—Å üçΩ')
      return
    }

    const data = {
      mood,
      taste,
      time: new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })
    }

    window.Telegram.WebApp.sendData(JSON.stringify(data))
    window.Telegram.WebApp.close()
  }

  return (
    <div className="app">
      <h1 className="title">–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞</h1>
      <p className="subtitle">–ü–æ–¥–±–µ—Ä—ë–º –±–ª—é–¥–æ –ø–æ–¥ —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</p>

      <select onChange={(e) => setMood(e.target.value)} value={mood}>
        <option value="">–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ...</option>
        {moods.map((m) => (
          <option key={m.value} value={m.value}>{m.label}</option>
        ))}
      </select>

      <select onChange={(e) => setTaste(e.target.value)} value={taste}>
        <option value="">–í–∫—É—Å...</option>
        {tastes.map((t) => (
          <option key={t.value} value={t.value}>{t.label}</option>
        ))}
      </select>

      {error && <p className="error">{error}</p>}

      <button onClick={handleSubmit}>‚ú® –ü–æ–¥–æ–±—Ä–∞—Ç—å –±–ª—é–¥–æ</button>
    </div>
  )
}

ReactDOM.createRoot(document.getElementById('root')).render(<App />)
